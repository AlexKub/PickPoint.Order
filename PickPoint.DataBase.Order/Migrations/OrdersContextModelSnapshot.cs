// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PickPoint.DataBase.Order;

namespace PickPoint.DataBase.Order.Migrations
{
    [DbContext(typeof(OrdersContext))]
    partial class OrdersContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.14")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.HasSequence<int>("OrderNumbers");

            modelBuilder.Entity("PickPoint.DataBase.Order.Models.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Number")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("NEXT VALUE FOR OrderNumbers");

                    b.Property<Guid?>("ParcelLockerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("RecipientFullName")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("RecipientPhone")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ParcelLockerId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("PickPoint.DataBase.Order.Models.OrderArticle", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Article")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderArticles");
                });

            modelBuilder.Entity("PickPoint.DataBase.Order.Models.ParcelLocker", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Number")
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.HasKey("Id");

                    b.ToTable("ParcelLockers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("3602cb03-aebd-4ed2-af0d-889f289e6210"),
                            Address = "Test addres 1",
                            IsActive = false,
                            Number = "1234-123"
                        },
                        new
                        {
                            Id = new Guid("11b8e477-2eeb-42e7-b0d9-e6a9fad1a4d4"),
                            Address = "Test addres 2",
                            IsActive = false,
                            Number = "1234-124"
                        },
                        new
                        {
                            Id = new Guid("aa8b4142-31f3-4e8a-bd12-3f17480739da"),
                            Address = "Test addres 3",
                            IsActive = false,
                            Number = "1234-125"
                        });
                });

            modelBuilder.Entity("PickPoint.DataBase.Order.Models.Order", b =>
                {
                    b.HasOne("PickPoint.DataBase.Order.Models.ParcelLocker", "ParcelLocker")
                        .WithMany("Orders")
                        .HasForeignKey("ParcelLockerId");

                    b.Navigation("ParcelLocker");
                });

            modelBuilder.Entity("PickPoint.DataBase.Order.Models.OrderArticle", b =>
                {
                    b.HasOne("PickPoint.DataBase.Order.Models.Order", "Order")
                        .WithMany("Articles")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("PickPoint.DataBase.Order.Models.Order", b =>
                {
                    b.Navigation("Articles");
                });

            modelBuilder.Entity("PickPoint.DataBase.Order.Models.ParcelLocker", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
